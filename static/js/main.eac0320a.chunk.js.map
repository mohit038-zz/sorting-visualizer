{"version":3,"sources":["components/Bar.tsx","Types/index.ts","contexts/BubbleSortContext.tsx","containers/BarGraph.tsx","Algorithm/bubbleSort.ts","contexts/ControlContext.tsx","containers/Control.tsx","containers/Header.tsx","containers/App.tsx","index.tsx"],"names":["Bar","React","memo","value","currentSwapper","currentBubble","currentSorted","className","style","height","prevProps","nextProps","initialState","state","running","array","currentBubbleTwo","dispatch","sortReducer","action","type","payload","length","BubbleSortContext","createContext","BubbleSortContextProvider","children","useReducer","Provider","useBubbleSort","context","useContext","undefined","Error","BarGraph","map","val","index","includes","handleDispatch","toDispatch","speed","num","setTimeout","dispatchFunction","shift","size","delay","controlReducer","ControlContext","ControlContextProvider","useControl","Control","controlState","controlDispatch","onClick","convertSpeed","stateArray","slice","sorted","round","i","push","temp","bubbleSort","disabled","title","min","max","name","step","onChange","e","parseInt","target","Header","sortState","resetArray","useCallback","newArray","randomIntFromInterval","useEffect","Math","floor","random","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MASaA,EAA0BC,IAAMC,MAC3C,YAAwE,IAArEC,EAAoE,EAApEA,MAAOC,EAA6D,EAA7DA,eAAgBC,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,cACvC,OACE,qBACEC,UACEH,EACI,iBACAC,EACA,iBACAC,EACA,mBACA,MAENE,MAAO,CACLC,OAAO,GAAD,OAAKN,EAAQ,EAAb,QAXV,SAcE,sBAAMI,UAAU,YAAhB,SAA6BJ,SAInC,SAACO,EAAWC,GAAZ,OACED,EAAUP,QAAUQ,EAAUR,OAC9BO,EAAUL,gBAAkBM,EAAUN,eACtCK,EAAUJ,gBAAkBK,EAAUL,eACtCI,EAAUN,iBAAmBO,EAAUP,kB,qBCrB9BQ,EAA2C,CACtDC,MAAO,CACLC,SAAS,EACTC,MAAO,GACPX,eAAgB,GAChBE,cAAe,GACfU,iBAAkB,IAEpBC,SAAU,cCTNC,EAAc,SAACL,EAA+BM,GAClD,OAAQA,EAAOC,MACb,IAAK,aACH,OAAO,2BAAKP,GAAZ,IAAmBC,QAASK,EAAOE,UACrC,IAAK,WACH,OAAO,2BAAKR,GAAZ,IAAmBE,MAAOI,EAAOE,UACnC,IAAK,qBACH,OAAO,2BAAKR,GAAZ,IAAmBT,eAAgBe,EAAOE,UAC5C,IAAK,mBACH,OAAIF,EAAOE,QAAQC,OAAS,EACnB,2BACFT,GADL,IAEEP,cAAc,GAAD,mBAAMO,EAAMP,eAAZ,YAA8Ba,EAAOE,YAG7C,2BAAKR,GAAZ,IAAmBP,cAAe,KAEtC,IAAK,sBACH,OAAO,2BAAKO,GAAZ,IAAmBG,iBAAkBG,EAAOE,UAC9C,QACE,OAAOR,IAIPU,EACJC,wBAA0CZ,GAE/Ba,EACX,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACUC,qBAAWT,EAAaN,EAAaC,OAD/C,mBAEVV,EAAQ,CACZU,MAHc,KAIdI,SAJc,MAMhB,OACE,cAACM,EAAkBK,SAAnB,CAA4BzB,MAAOA,EAAnC,SACGuB,KAKIG,EAAgB,WAC3B,IAAMC,EAAUC,qBAAWR,GAC3B,QAAgBS,IAAZF,EACF,MAAM,IAAIG,MACR,iEAGJ,OAAOH,GCtDII,EAAoC,WAAO,IAC9CrB,EAAUgB,IAAVhB,MACAE,EAA2DF,EAA3DE,MAAOC,EAAoDH,EAApDG,iBAAkBV,EAAkCO,EAAlCP,cAAeF,EAAmBS,EAAnBT,eAChD,OACE,qBAAKG,UAAU,YAAf,SACE,qBAAKA,UAAU,sBAAf,SACGQ,EAAMoB,KAAI,SAACC,EAAKC,GAAN,OACT,cAACrC,EAAD,CAEEG,MAAOiC,EACP/B,cAAeW,EAAiBsB,SAASD,GACzCjC,eAAgBA,EAAekC,SAASD,GACxC/B,cAAeA,EAAcgC,SAASD,IAJjCA,WCkBXE,EAAiB,SAAjBA,EACJC,EACAvB,EACAF,EACA0B,GAEA,IAAKD,EAAWlB,OAad,OAZAL,EAAS,CACPG,KAAM,sBACNC,QAASN,EAAMoB,KAAI,SAACO,EAAKL,GAAN,OAAgBA,YAErCM,YAAW,WACT1B,EAAS,CAAEG,KAAM,sBAAuBC,QAAS,KACjDJ,EAAS,CACPG,KAAM,mBACNC,QAASN,EAAMoB,KAAI,SAACO,EAAKL,GAAN,OAAgBA,OAErCpB,EAAS,CAAEG,KAAM,aAAcC,SAAS,MACvC,GAGL,IAAIuB,EACFJ,EAAW,GAAGlB,OAAS,EACnB,WACyB,IAAzBkB,EAAW,GAAGlB,QAAyC,IAAzBkB,EAAW,GAAGlB,OAC5C,qBACyB,IAAzBkB,EAAW,GAAGlB,QAA4C,mBAArBkB,EAAW,GAAG,GACnD,mBACA,sBACNvB,EAAS,CAAEG,KAAMwB,EAAkBvB,QAASmB,EAAWK,UACvDF,YAAW,WACTJ,EAAeC,EAAYvB,EAAUF,EAAO0B,KAC3CA,ICtDC7B,EAAe,CACnBC,MAAO,CACLiC,KAAM,GACNC,MAAO,GAET9B,SAAU,cAWN+B,EAAiB,SACrBnC,EACAM,GAEA,OAAQA,EAAOC,MACb,IAAK,aACH,OAAO,2BAAKP,GAAZ,IAAmBiC,KAAM3B,EAAOE,UAClC,IAAK,cACH,OAAO,2BAAKR,GAAZ,IAAmBkC,MAAO5B,EAAOE,UACnC,QACE,OAAOR,IAGAoC,EACXhD,IAAMuB,cAAuCZ,GAElCsC,EAAwD,SAAC,GAE/D,IADLxB,EACI,EADJA,SACI,EACsBzB,IAAM0B,WAC9BqB,EACApC,EAAaC,OAHX,mBACGA,EADH,KACUI,EADV,KAKJ,OACE,cAACgC,EAAerB,SAAhB,CAAyBzB,MAAO,CAAEU,QAAOI,YAAzC,SACGS,KAKMyB,EAAa,WACxB,IAAMrB,EAAU7B,IAAM8B,WAAWkB,GACjC,QAAgBjB,IAAZF,EACF,MAAM,IAAIG,MAAM,oDAElB,OAAOH,GCtDIsB,EAAkC,WAAO,IAAD,EACvBvB,IAApBhB,EAD2C,EAC3CA,MAAOI,EADoC,EACpCA,SADoC,EAEQkC,IAA5CE,EAFoC,EAE3CxC,MAA+ByC,EAFY,EAEtBrC,SACrB6B,EAAgBO,EAAhBP,KAAMC,EAAUM,EAAVN,MACNjC,EAAYD,EAAZC,QAgBR,OACE,sBAAKP,UAAU,UAAf,UACE,wBACEA,UAAU,wBACVgD,QAnBO,WACX,IAAMC,EAAe,IAAMT,EAC3B9B,EAAS,CAAEG,KAAM,aAAcC,SAAS,IFZlB,SACxBoC,EACAxC,EACAwB,GAMA,IAJA,IAAI1B,EAAQ0C,EAAWC,MAAM,GAC3BlB,EAAa,GACbmB,GAAS,EACTC,EAAQ,GACFD,GAAQ,CACdA,GAAS,EACT,IAAK,IAAIE,EAAI,EAAGA,EAAI9C,EAAMO,OAAS,EAAIsC,EAAOC,IAE5C,GADArB,EAAWsB,KAAK,CAACD,EAAGA,EAAI,IACpB9C,EAAM8C,GAAK9C,EAAM8C,EAAI,GAAI,CAC3BrB,EAAWsB,KAAK,CAACD,EAAGA,EAAI,GAAG,IAC3B,IAAIE,EAAOhD,EAAM8C,EAAI,GACrB9C,EAAM8C,EAAI,GAAK9C,EAAM8C,GACrB9C,EAAM8C,GAAKE,EACXJ,GAAS,EACTnB,EAAWsB,KAAK/C,EAAM2C,MAAM,IAC5BlB,EAAWsB,KAAK,IAGpBtB,EAAWsB,KAAK,EAAC,EAAM/C,EAAMO,OAAS,EAAIsC,IAC1CA,IAEFrB,EAAeC,EAAYvB,EAAUF,EAAO0B,GEb1CuB,CAAWnD,EAAME,MAAOE,EAAUuC,IAiB9BS,SAAUnD,EAHZ,kBAOA,sBAAKP,UAAU,iBAAf,UACE,uBAAOA,UAAU,uBAAjB,kBACA,uBACE0D,SAAUnD,EACVM,KAAK,QACL8C,MAAM,OACN3D,UAAU,wBACV4D,IAAI,KACJC,IAAI,KACJC,KAAK,OACLlE,MAAO2C,EACPwB,KAAM,EACNC,SA/Ba,SAACC,GACpBvD,EAAS,CACPG,KAAM,mBACNC,QAAS,KAEXiC,EAAgB,CAAElC,KAAM,aAAcC,QAASoD,SAASD,EAAEE,OAAOvE,YA4B7D,uBAAOI,UAAU,uBAAjB,SAAyCuC,OAE3C,sBAAKvC,UAAU,iBAAf,UACE,uBAAOA,UAAU,uBAAjB,mBACA,uBACE0D,SAAUnD,EACVM,KAAK,QACL8C,MAAM,QACN3D,UAAU,wBACV4D,IAAI,IACJC,IAAI,IACJC,KAAK,QACLlE,MAAO4C,EACPuB,KAAM,EACNC,SAxCc,SAACC,GACrBlB,EAAgB,CAAElC,KAAM,cAAeC,QAASoD,SAASD,EAAEE,OAAOvE,YAyC9D,uBAAOI,UAAU,uBAAjB,SAAyCwC,WC5DpC4B,EAAgC,WAAO,IAC1C9D,EAAUsC,IAAVtC,MADyC,EAEVgB,IAAxB+C,EAFkC,EAEzC/D,MAAkBI,EAFuB,EAEvBA,SAClB6B,EAASjC,EAATiC,KACAhC,EAAY8D,EAAZ9D,QAEF+D,EAAaC,uBAAY,WAE7B,IADA,IAAMC,EAAqB,GAClBlB,EAAI,EAAGA,EAAIf,EAAMe,IACxBkB,EAASjB,KAAKkB,EAAsB,GAAI,MAC1C/D,EAAS,CAAEG,KAAM,WAAYC,QAAS0D,MACrC,CAAC9D,EAAU6B,IAEdmC,qBAAU,WACRJ,MACC,CAACA,IAEJ,IAAMG,EAAwB,SAACb,EAAaC,GAC1C,OAAOc,KAAKC,MAAMD,KAAKE,UAAYhB,EAAMD,EAAM,GAAKA,IAYtD,OACE,yBAAQ5D,UAAU,SAAlB,UACE,oBAAIA,UAAU,eAAd,yBACA,wBAAQA,UAAU,SAAS0D,SAAUnD,EAASyC,QAZzB,WACvBtC,EAAS,CAAEG,KAAM,mBAAoBC,QAAS,KAC9C,IAAK,IAAIwC,EAAI,EAAGA,EAAI,GAAIA,IACtBlB,YAAW,WACTkC,MACK,GAAJhB,IAOH,uBCzBSwB,MAVf,WACE,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,UAINC,SAASC,eAAe,W","file":"static/js/main.eac0320a.chunk.js","sourcesContent":["import React from \"react\";\n\ninterface BarProps {\n  value: number;\n  currentSwapper: boolean;\n  currentBubble: boolean;\n  currentSorted: boolean;\n}\n\nexport const Bar: React.FC<BarProps> = React.memo(\n  ({ value, currentSwapper, currentBubble, currentSorted }: BarProps) => {\n    return (\n      <div\n        className={\n          currentSwapper\n            ? \"bar bar-danger\"\n            : currentBubble\n            ? \"bar bar-active\"\n            : currentSorted\n            ? \"bar bar-selected\"\n            : \"bar\"\n        }\n        style={{\n          height: `${value / 6}rem`,\n        }}\n      >\n        <span className=\"bar-value\">{value}</span>\n      </div>\n    );\n  },\n  (prevProps, nextProps) =>\n    prevProps.value === nextProps.value &&\n    prevProps.currentBubble === nextProps.currentBubble &&\n    prevProps.currentSorted === nextProps.currentSorted &&\n    prevProps.currentSwapper === nextProps.currentSwapper\n);\n","export interface BubbleSortContextState {\n  running: boolean;\n  array: number[];\n  currentSwapper: number[];\n  currentSorted: Array<number | boolean>;\n  currentBubbleTwo: number[];\n}\n\nexport interface BubbleSortContextInterface {\n  state: BubbleSortContextState;\n  dispatch: React.Dispatch<actionType>;\n}\n\nexport const initialState: BubbleSortContextInterface = {\n  state: {\n    running: false,\n    array: [],\n    currentSwapper: [],\n    currentSorted: [],\n    currentBubbleTwo: [],\n  },\n  dispatch: () => {},\n};\n\nexport type actionTypeName =\n  | \"setRunning\"\n  | \"setArray\"\n  | \"setCurrentSwappers\"\n  | \"setCurrentSorted\"\n  | \"setCurrentBubbleTwo\";\n\nexport type actionType =\n  | { type: \"setRunning\"; payload: boolean }\n  | { type: \"setArray\"; payload: number[] }\n  | { type: \"setCurrentSwappers\"; payload: number[] }\n  | { type: \"setCurrentSorted\"; payload: number[] }\n  | { type: \"setCurrentBubbleTwo\"; payload: number[] };\n","import React, { createContext, useContext, useReducer } from \"react\";\nimport {\n  BubbleSortContextState,\n  actionType,\n  BubbleSortContextInterface,\n  initialState,\n} from \"../Types\";\n\ninterface bubbleSortContextProviderProps {\n  children: React.ReactNode;\n}\n\nconst sortReducer = (state: BubbleSortContextState, action: actionType) => {\n  switch (action.type) {\n    case \"setRunning\":\n      return { ...state, running: action.payload };\n    case \"setArray\":\n      return { ...state, array: action.payload };\n    case \"setCurrentSwappers\":\n      return { ...state, currentSwapper: action.payload };\n    case \"setCurrentSorted\":\n      if (action.payload.length > 0) {\n        return {\n          ...state,\n          currentSorted: [...state.currentSorted, ...action.payload],\n        };\n      } else {\n        return { ...state, currentSorted: [] };\n      }\n    case \"setCurrentBubbleTwo\":\n      return { ...state, currentBubbleTwo: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst BubbleSortContext =\n  createContext<BubbleSortContextInterface>(initialState);\n\nexport const BubbleSortContextProvider: React.FC<bubbleSortContextProviderProps> =\n  ({ children }) => {\n    const [state, dispatch] = useReducer(sortReducer, initialState.state);\n    const value = {\n      state,\n      dispatch,\n    };\n    return (\n      <BubbleSortContext.Provider value={value}>\n        {children}\n      </BubbleSortContext.Provider>\n    );\n  };\n\nexport const useBubbleSort = () => {\n  const context = useContext(BubbleSortContext);\n  if (context === undefined) {\n    throw new Error(\n      \"useBubbleSort must be used within a BubbleSortContextProvider\"\n    );\n  }\n  return context;\n};\n","import React from \"react\";\nimport { Bar } from \"../components/Bar\";\nimport { useBubbleSort } from \"../contexts/BubbleSortContext\";\n\ninterface BarGraphProps {}\n\nexport const BarGraph: React.FC<BarGraphProps> = () => {\n  const { state } = useBubbleSort();\n  const { array, currentBubbleTwo, currentSorted, currentSwapper } = state;\n  return (\n    <div className=\"bar-graph\">\n      <div className=\"bar-graph-container\">\n        {array.map((val, index) => (\n          <Bar\n            key={index}\n            value={val}\n            currentBubble={currentBubbleTwo.includes(index)}\n            currentSwapper={currentSwapper.includes(index)}\n            currentSorted={currentSorted.includes(index)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import { actionType, actionTypeName } from \"../Types\";\n\nexport const bubbleSort = (\n  stateArray: number[],\n  dispatch: React.Dispatch<actionType>,\n  speed: number\n) => {\n  let array = stateArray.slice(0),\n    toDispatch = [],\n    sorted = false,\n    round = 0;\n  while (!sorted) {\n    sorted = true;\n    for (let i = 0; i < array.length - 1 - round; i++) {\n      toDispatch.push([i, i + 1]);\n      if (array[i] > array[i + 1]) {\n        toDispatch.push([i, i + 1, true]);\n        let temp = array[i + 1];\n        array[i + 1] = array[i];\n        array[i] = temp;\n        sorted = false;\n        toDispatch.push(array.slice(0));\n        toDispatch.push([]);\n      }\n    }\n    toDispatch.push([true, array.length - 1 - round]);\n    round++;\n  }\n  handleDispatch(toDispatch, dispatch, array, speed);\n  return array;\n};\n\nconst handleDispatch = (\n  toDispatch: Array<any>,\n  dispatch: React.Dispatch<actionType>,\n  array: number[],\n  speed: number\n) => {\n  if (!toDispatch.length) {\n    dispatch({\n      type: \"setCurrentBubbleTwo\",\n      payload: array.map((num, index) => index),\n    });\n    setTimeout(() => {\n      dispatch({ type: \"setCurrentBubbleTwo\", payload: [] });\n      dispatch({\n        type: \"setCurrentSorted\",\n        payload: array.map((num, index) => index),\n      });\n      dispatch({ type: \"setRunning\", payload: false });\n    }, 9);\n    return;\n  }\n  let dispatchFunction: actionTypeName =\n    toDispatch[0].length > 3\n      ? \"setArray\"\n      : toDispatch[0].length === 3 || toDispatch[0].length === 0\n      ? \"setCurrentSwappers\"\n      : toDispatch[0].length === 2 && typeof toDispatch[0][0] === \"boolean\"\n      ? \"setCurrentSorted\"\n      : \"setCurrentBubbleTwo\";\n  dispatch({ type: dispatchFunction, payload: toDispatch.shift() });\n  setTimeout(() => {\n    handleDispatch(toDispatch, dispatch, array, speed);\n  }, speed);\n};\n","import React from \"react\";\n\ninterface ControlContextProps {\n  children: React.ReactNode;\n}\n\nexport type ControlContextType =\n  | { type: \"changeSize\"; payload: number }\n  | { type: \"changeDelay\"; payload: number };\n\nconst initialState = {\n  state: {\n    size: 15,\n    delay: 5,\n  },\n  dispatch: () => {},\n};\ninterface ControlContextState {\n  size: number;\n  delay: number;\n}\ninterface ControlContextInterface {\n  state: ControlContextState;\n  dispatch: React.Dispatch<ControlContextType>;\n}\n\nconst controlReducer = (\n  state: ControlContextState,\n  action: ControlContextType\n) => {\n  switch (action.type) {\n    case \"changeSize\":\n      return { ...state, size: action.payload };\n    case \"changeDelay\":\n      return { ...state, delay: action.payload };\n    default:\n      return state;\n  }\n};\nexport const ControlContext =\n  React.createContext<ControlContextInterface>(initialState);\n\nexport const ControlContextProvider: React.FC<ControlContextProps> = ({\n  children,\n}) => {\n  const [state, dispatch] = React.useReducer(\n    controlReducer,\n    initialState.state\n  );\n  return (\n    <ControlContext.Provider value={{ state, dispatch }}>\n      {children}\n    </ControlContext.Provider>\n  );\n};\n\nexport const useControl = () => {\n  const context = React.useContext(ControlContext);\n  if (context === undefined) {\n    throw new Error(\"useControl must be used within a ControlProvider\");\n  }\n  return context;\n};\n","import React from \"react\";\nimport { bubbleSort } from \"../Algorithm/bubbleSort\";\nimport { useBubbleSort } from \"../contexts/BubbleSortContext\";\nimport { useControl } from \"../contexts/ControlContext\";\n\ninterface ControlProps {}\n\nexport const Control: React.FC<ControlProps> = () => {\n  const { state, dispatch } = useBubbleSort();\n  const { state: controlState, dispatch: controlDispatch } = useControl();\n  const { size, delay } = controlState;\n  const { running } = state;\n  const sort = () => {\n    const convertSpeed = 100 * delay;\n    dispatch({ type: \"setRunning\", payload: true });\n    bubbleSort(state.array, dispatch, convertSpeed);\n  };\n  const onSizeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch({\n      type: \"setCurrentSorted\",\n      payload: [],\n    });\n    controlDispatch({ type: \"changeSize\", payload: parseInt(e.target.value) });\n  };\n  const onDelayChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    controlDispatch({ type: \"changeDelay\", payload: parseInt(e.target.value) });\n  };\n  return (\n    <div className=\"control\">\n      <button\n        className=\"control-button button\"\n        onClick={sort}\n        disabled={running}\n      >\n        Sort\n      </button>\n      <div className=\"control-slider\">\n        <label className=\"control-slider-label\">Size</label>\n        <input\n          disabled={running}\n          type=\"range\"\n          title=\"size\"\n          className=\"control-slider-button\"\n          min=\"10\"\n          max=\"25\"\n          name=\"size\"\n          value={size}\n          step={1}\n          onChange={onSizeChange}\n        />\n        <label className=\"control-slider-label\">{size}</label>\n      </div>\n      <div className=\"control-slider\">\n        <label className=\"control-slider-label\">Delay</label>\n        <input\n          disabled={running}\n          type=\"range\"\n          title=\"delay\"\n          className=\"control-slider-button\"\n          min=\"1\"\n          max=\"9\"\n          name=\"speed\"\n          value={delay}\n          step={1}\n          onChange={onDelayChange}\n        />\n        <label className=\"control-slider-label\">{delay}</label>\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback, useEffect } from \"react\";\nimport { useBubbleSort } from \"../contexts/BubbleSortContext\";\nimport { useControl } from \"../contexts/ControlContext\";\n\ninterface HeaderProps {}\n\nexport const Header: React.FC<HeaderProps> = () => {\n  const { state } = useControl();\n  const { state: sortState, dispatch } = useBubbleSort();\n  const { size } = state;\n  const { running } = sortState;\n\n  const resetArray = useCallback(() => {\n    const newArray: number[] = [];\n    for (let i = 0; i < size; i++)\n      newArray.push(randomIntFromInterval(20, 100));\n    dispatch({ type: \"setArray\", payload: newArray });\n  }, [dispatch, size]);\n\n  useEffect(() => {\n    resetArray();\n  }, [resetArray]);\n\n  const randomIntFromInterval = (min: number, max: number) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  const onRefreshClicked = () => {\n    dispatch({ type: \"setCurrentSorted\", payload: [] });\n    for (let i = 0; i < 10; i++) {\n      setTimeout(() => {\n        resetArray();\n      }, i * 40);\n    }\n  };\n\n  return (\n    <header className=\"header\">\n      <h1 className=\"header-title\">Bubble Sort</h1>\n      <button className=\"button\" disabled={running} onClick={onRefreshClicked}>\n        Reset\n      </button>\n    </header>\n  );\n};\n","import { BarGraph } from \"./BarGraph\";\nimport { Control } from \"./Control\";\nimport { Header } from \"./Header\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <BarGraph />\n      <Control />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\nimport App from \"./containers/App\";\nimport { BubbleSortContextProvider } from \"./contexts/BubbleSortContext\";\nimport { ControlContextProvider } from \"./contexts/ControlContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ControlContextProvider>\n      <BubbleSortContextProvider>\n        <App />\n      </BubbleSortContextProvider>\n    </ControlContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}