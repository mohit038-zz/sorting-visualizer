{"version":3,"sources":["contexts/ControlContext.tsx","components/Bar.tsx","Types/index.ts","contexts/BubbleSortContext.tsx","containers/BarGraph.tsx","Algorithm/bubbleSort.ts","containers/Control.tsx","containers/Header.tsx","containers/App.tsx","index.tsx"],"names":["initialState","state","size","delay","dispatch","controlReducer","action","type","payload","ControlContext","React","createContext","ControlContextProvider","children","useReducer","Provider","value","useControl","context","useContext","undefined","Error","Bar","memo","currentSwapper","currentBubble","currentSorted","className","style","height","display","styles","prevProps","nextProps","running","array","currentBubbleTwo","sortReducer","length","BubbleSortContext","BubbleSortContextProvider","useBubbleSort","BarGraph","map","val","index","includes","handleDispatch","toDispatch","speed","num","setTimeout","dispatchFunction","shift","Control","controlState","controlDispatch","onClick","convertSpeed","stateArray","slice","sorted","round","i","push","temp","bubbleSort","disabled","title","min","max","name","step","onChange","e","parseInt","target","Header","sortState","resetArray","useCallback","newArray","randomIntFromInterval","useEffect","Math","floor","random","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1091a86b.chunk.js","sourcesContent":["import React from \"react\";\n\ninterface ControlContextProps {\n  children: React.ReactNode;\n}\n\nexport type ControlContextType =\n  | { type: \"changeSize\"; payload: number }\n  | { type: \"changeDelay\"; payload: number };\n\nconst initialState = {\n  state: {\n    size: 15,\n    delay: 5,\n  },\n  dispatch: () => {},\n};\ninterface ControlContextState {\n  size: number;\n  delay: number;\n}\ninterface ControlContextInterface {\n  state: ControlContextState;\n  dispatch: React.Dispatch<ControlContextType>;\n}\n\nconst controlReducer = (\n  state: ControlContextState,\n  action: ControlContextType\n) => {\n  switch (action.type) {\n    case \"changeSize\":\n      return { ...state, size: action.payload };\n    case \"changeDelay\":\n      return { ...state, delay: action.payload };\n    default:\n      return state;\n  }\n};\nexport const ControlContext =\n  React.createContext<ControlContextInterface>(initialState);\n\nexport const ControlContextProvider: React.FC<ControlContextProps> = ({\n  children,\n}) => {\n  const [state, dispatch] = React.useReducer(\n    controlReducer,\n    initialState.state\n  );\n  return (\n    <ControlContext.Provider value={{ state, dispatch }}>\n      {children}\n    </ControlContext.Provider>\n  );\n};\n\nexport const useControl = () => {\n  const context = React.useContext(ControlContext);\n  if (context === undefined) {\n    throw new Error(\"useControl must be used within a ControlProvider\");\n  }\n  return context;\n};\n","import React from \"react\";\nimport { useControl } from \"../contexts/ControlContext\";\n\ninterface BarProps {\n  value: number;\n  currentSwapper: boolean;\n  currentBubble: boolean;\n  currentSorted: boolean;\n}\n\nexport const Bar: React.FC<BarProps> = React.memo(\n  ({ value, currentSwapper, currentBubble, currentSorted }: BarProps) => {\n    const { state } = useControl();\n    const styles = () => {\n      if (state.size < 18) {\n        return {\n          display: \"inline\",\n        };\n      }\n    };\n    return (\n      <div\n        className={\n          currentSwapper\n            ? \"bar bar-danger\"\n            : currentBubble\n            ? \"bar bar-active\"\n            : currentSorted\n            ? \"bar bar-selected\"\n            : \"bar\"\n        }\n        style={{\n          height: `${value / 6}rem`,\n        }}\n      >\n        <span className=\"bar-value\" style={styles()}>\n          {value}\n        </span>\n      </div>\n    );\n  },\n  (prevProps, nextProps) =>\n    prevProps.value === nextProps.value &&\n    prevProps.currentBubble === nextProps.currentBubble &&\n    prevProps.currentSorted === nextProps.currentSorted &&\n    prevProps.currentSwapper === nextProps.currentSwapper\n);\n","export interface BubbleSortContextState {\n  running: boolean;\n  array: number[];\n  currentSwapper: number[];\n  currentSorted: Array<number | boolean>;\n  currentBubbleTwo: number[];\n}\n\nexport interface BubbleSortContextInterface {\n  state: BubbleSortContextState;\n  dispatch: React.Dispatch<actionType>;\n}\n\nexport const initialState: BubbleSortContextInterface = {\n  state: {\n    running: false,\n    array: [],\n    currentSwapper: [],\n    currentSorted: [],\n    currentBubbleTwo: [],\n  },\n  dispatch: () => {},\n};\n\nexport type actionTypeName =\n  | \"setRunning\"\n  | \"setArray\"\n  | \"setCurrentSwappers\"\n  | \"setCurrentSorted\"\n  | \"setCurrentBubbleTwo\";\n\nexport type actionType =\n  | { type: \"setRunning\"; payload: boolean }\n  | { type: \"setArray\"; payload: number[] }\n  | { type: \"setCurrentSwappers\"; payload: number[] }\n  | { type: \"setCurrentSorted\"; payload: number[] }\n  | { type: \"setCurrentBubbleTwo\"; payload: number[] };\n","import React, { createContext, useContext, useReducer } from \"react\";\nimport {\n  BubbleSortContextState,\n  actionType,\n  BubbleSortContextInterface,\n  initialState,\n} from \"../Types\";\n\ninterface bubbleSortContextProviderProps {\n  children: React.ReactNode;\n}\n\nconst sortReducer = (state: BubbleSortContextState, action: actionType) => {\n  switch (action.type) {\n    case \"setRunning\":\n      return { ...state, running: action.payload };\n    case \"setArray\":\n      return { ...state, array: action.payload };\n    case \"setCurrentSwappers\":\n      return { ...state, currentSwapper: action.payload };\n    case \"setCurrentSorted\":\n      if (action.payload.length > 0) {\n        return {\n          ...state,\n          currentSorted: [...state.currentSorted, ...action.payload],\n        };\n      } else {\n        return { ...state, currentSorted: [] };\n      }\n    case \"setCurrentBubbleTwo\":\n      return { ...state, currentBubbleTwo: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst BubbleSortContext =\n  createContext<BubbleSortContextInterface>(initialState);\n\nexport const BubbleSortContextProvider: React.FC<bubbleSortContextProviderProps> =\n  ({ children }) => {\n    const [state, dispatch] = useReducer(sortReducer, initialState.state);\n    const value = {\n      state,\n      dispatch,\n    };\n    return (\n      <BubbleSortContext.Provider value={value}>\n        {children}\n      </BubbleSortContext.Provider>\n    );\n  };\n\nexport const useBubbleSort = () => {\n  const context = useContext(BubbleSortContext);\n  if (context === undefined) {\n    throw new Error(\n      \"useBubbleSort must be used within a BubbleSortContextProvider\"\n    );\n  }\n  return context;\n};\n","import React from \"react\";\nimport { Bar } from \"../components/Bar\";\nimport { useBubbleSort } from \"../contexts/BubbleSortContext\";\n\ninterface BarGraphProps {}\n\nexport const BarGraph: React.FC<BarGraphProps> = () => {\n  const { state } = useBubbleSort();\n  const { array, currentBubbleTwo, currentSorted, currentSwapper } = state;\n  return (\n    <div className=\"bar-graph\">\n      <div className=\"bar-graph-container\">\n        {array.map((val, index) => (\n          <Bar\n            key={index}\n            value={val}\n            currentBubble={currentBubbleTwo.includes(index)}\n            currentSwapper={currentSwapper.includes(index)}\n            currentSorted={currentSorted.includes(index)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import { actionType, actionTypeName } from \"../Types\";\n\nexport const bubbleSort = (\n  stateArray: number[],\n  dispatch: React.Dispatch<actionType>,\n  speed: number\n) => {\n  let array = stateArray.slice(0),\n    toDispatch = [],\n    sorted = false,\n    round = 0;\n  while (!sorted) {\n    sorted = true;\n    for (let i = 0; i < array.length - 1 - round; i++) {\n      toDispatch.push([i, i + 1]);\n      if (array[i] > array[i + 1]) {\n        toDispatch.push([i, i + 1, true]);\n        let temp = array[i + 1];\n        array[i + 1] = array[i];\n        array[i] = temp;\n        sorted = false;\n        toDispatch.push(array.slice(0));\n        toDispatch.push([]);\n      }\n    }\n    toDispatch.push([true, array.length - 1 - round]);\n    round++;\n  }\n  handleDispatch(toDispatch, dispatch, array, speed);\n  return array;\n};\n\nconst handleDispatch = (\n  toDispatch: Array<any>,\n  dispatch: React.Dispatch<actionType>,\n  array: number[],\n  speed: number\n) => {\n  if (!toDispatch.length) {\n    dispatch({\n      type: \"setCurrentBubbleTwo\",\n      payload: array.map((num, index) => index),\n    });\n    setTimeout(() => {\n      dispatch({ type: \"setCurrentBubbleTwo\", payload: [] });\n      dispatch({\n        type: \"setCurrentSorted\",\n        payload: array.map((num, index) => index),\n      });\n      dispatch({ type: \"setRunning\", payload: false });\n    }, 9);\n    return;\n  }\n  let dispatchFunction: actionTypeName =\n    toDispatch[0].length > 3\n      ? \"setArray\"\n      : toDispatch[0].length === 3 || toDispatch[0].length === 0\n      ? \"setCurrentSwappers\"\n      : toDispatch[0].length === 2 && typeof toDispatch[0][0] === \"boolean\"\n      ? \"setCurrentSorted\"\n      : \"setCurrentBubbleTwo\";\n  dispatch({ type: dispatchFunction, payload: toDispatch.shift() });\n  setTimeout(() => {\n    handleDispatch(toDispatch, dispatch, array, speed);\n  }, speed);\n};\n","import React from \"react\";\nimport { bubbleSort } from \"../Algorithm/bubbleSort\";\nimport { useBubbleSort } from \"../contexts/BubbleSortContext\";\nimport { useControl } from \"../contexts/ControlContext\";\n\ninterface ControlProps {}\n\nexport const Control: React.FC<ControlProps> = () => {\n  const { state, dispatch } = useBubbleSort();\n  const { state: controlState, dispatch: controlDispatch } = useControl();\n  const { size, delay } = controlState;\n  const { running } = state;\n  const sort = () => {\n    const convertSpeed = 100 * delay;\n    dispatch({ type: \"setRunning\", payload: true });\n    bubbleSort(state.array, dispatch, convertSpeed);\n  };\n  const onSizeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch({\n      type: \"setCurrentSorted\",\n      payload: [],\n    });\n    controlDispatch({ type: \"changeSize\", payload: parseInt(e.target.value) });\n  };\n  const onDelayChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    controlDispatch({ type: \"changeDelay\", payload: parseInt(e.target.value) });\n  };\n  return (\n    <div className=\"control\">\n      <button\n        className=\"control-button button\"\n        onClick={sort}\n        disabled={running}\n      >\n        Sort\n      </button>\n      <div className=\"control-slider\">\n        <label className=\"control-slider-label\">Size</label>\n        <input\n          disabled={running}\n          type=\"range\"\n          title=\"size\"\n          className=\"control-slider-button\"\n          min=\"10\"\n          max=\"25\"\n          name=\"size\"\n          value={size}\n          step={1}\n          onChange={onSizeChange}\n        />\n        <label className=\"control-slider-label\">{size}</label>\n      </div>\n      <div className=\"control-slider\">\n        <label className=\"control-slider-label\">Delay</label>\n        <input\n          disabled={running}\n          type=\"range\"\n          title=\"delay\"\n          className=\"control-slider-button\"\n          min=\"1\"\n          max=\"9\"\n          name=\"speed\"\n          value={delay}\n          step={1}\n          onChange={onDelayChange}\n        />\n        <label className=\"control-slider-label\">{delay}</label>\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback, useEffect } from \"react\";\nimport { useBubbleSort } from \"../contexts/BubbleSortContext\";\nimport { useControl } from \"../contexts/ControlContext\";\n\ninterface HeaderProps {}\n\nexport const Header: React.FC<HeaderProps> = () => {\n  const { state } = useControl();\n  const { state: sortState, dispatch } = useBubbleSort();\n  const { size } = state;\n  const { running } = sortState;\n\n  const resetArray = useCallback(() => {\n    const newArray: number[] = [];\n    for (let i = 0; i < size; i++)\n      newArray.push(randomIntFromInterval(20, 100));\n    dispatch({ type: \"setArray\", payload: newArray });\n  }, [dispatch, size]);\n\n  useEffect(() => {\n    resetArray();\n  }, [resetArray]);\n\n  const randomIntFromInterval = (min: number, max: number) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  const onRefreshClicked = () => {\n    dispatch({ type: \"setCurrentSorted\", payload: [] });\n    for (let i = 0; i < 10; i++) {\n      setTimeout(() => {\n        resetArray();\n      }, i * 40);\n    }\n  };\n\n  return (\n    <header className=\"header\">\n      <h1 className=\"header-title\">Bubble Sort</h1>\n      <button className=\"button\" disabled={running} onClick={onRefreshClicked}>\n        Reset\n      </button>\n    </header>\n  );\n};\n","import { BarGraph } from \"./BarGraph\";\nimport { Control } from \"./Control\";\nimport { Header } from \"./Header\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <BarGraph />\n      <Control />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\nimport App from \"./containers/App\";\nimport { BubbleSortContextProvider } from \"./contexts/BubbleSortContext\";\nimport { ControlContextProvider } from \"./contexts/ControlContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ControlContextProvider>\n      <BubbleSortContextProvider>\n        <App />\n      </BubbleSortContextProvider>\n    </ControlContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}